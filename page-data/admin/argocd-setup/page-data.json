{"componentChunkName":"component---src-pages-admin-argocd-setup-index-mdx","path":"/admin/argocd-setup/","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"ArgoCD Setup"},"relativePagePath":"/admin/argocd-setup/index.mdx","titleType":"page","MdxNode":{"id":"2019cfb0-f32d-5074-ba66-dfe455fbc468","children":[],"parent":"461e6451-9ad3-5bcf-a36e-a7ba66b8d68f","internal":{"content":"---\ntitle: ArgoCD Setup\n---\n\n<PageDescription>\n\nComplete the steps for setting up the ArgoCD tool\n\n</PageDescription>\n\n## Overview\n\nArgoCD is the [Developer Tools environment's continuous delivery tool](/guides/continuous-delivery).\nBefore you can use it as part of the environment, it must first be configured.\n\n## Prerequisites\n\nBefore setting up ArgoCD, [set up Artifactory](/getting-started/artifactory-setup) so that ArgoCD can use it.\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone https://github.com/ibm-garage-cloud/template-argocd-test\n  cd template-argocd-test\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n  ![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n  ![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your Developer Tools environment.\n\n- Test to confirm that your shell is logged into your cluster\n\n  ```bash\n  kubectl version --short\n  ```\n\n- In your local copy of the `template-argocd-test` repo, run `./config/addhelmrepository.sh [artifact-helm-repository-location]`\n\n    where `[artifact-helm-repository-location]` URL of the Helm repository location in Artifactory\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the Artifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the Developer Tools environment that it needs to access the Helm chart repository in Artifactory.\n","type":"Mdx","contentDigest":"c70c96455ae223af7b96c26a4e2ffc80","counter":473,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"ArgoCD Setup"},"exports":{},"rawBody":"---\ntitle: ArgoCD Setup\n---\n\n<PageDescription>\n\nComplete the steps for setting up the ArgoCD tool\n\n</PageDescription>\n\n## Overview\n\nArgoCD is the [Developer Tools environment's continuous delivery tool](/guides/continuous-delivery).\nBefore you can use it as part of the environment, it must first be configured.\n\n## Prerequisites\n\nBefore setting up ArgoCD, [set up Artifactory](/getting-started/artifactory-setup) so that ArgoCD can use it.\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone https://github.com/ibm-garage-cloud/template-argocd-test\n  cd template-argocd-test\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n  ![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n  ![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your Developer Tools environment.\n\n- Test to confirm that your shell is logged into your cluster\n\n  ```bash\n  kubectl version --short\n  ```\n\n- In your local copy of the `template-argocd-test` repo, run `./config/addhelmrepository.sh [artifact-helm-repository-location]`\n\n    where `[artifact-helm-repository-location]` URL of the Helm repository location in Artifactory\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the Artifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the Developer Tools environment that it needs to access the Helm chart repository in Artifactory.\n","fileAbsolutePath":"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide/src/pages/admin/argocd-setup/index.mdx"}}}}