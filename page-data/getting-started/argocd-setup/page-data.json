{"componentChunkName":"component---src-pages-getting-started-argocd-setup-index-mdx","path":"/getting-started/argocd-setup/","result":{"pageContext":{"isCreatedByStatefulCreatePages":true,"frontmatter":{"title":"ArgoCD Setup"},"relativePagePath":"/getting-started/argocd-setup/index.mdx","titleType":"page","MdxNode":{"id":"2607f6b6-0d69-5b98-8485-eba7a75f21b6","children":[],"parent":"c808dd25-c994-572b-ad0b-40093aa0ae45","internal":{"content":"---\ntitle: ArgoCD Setup\n---\n\n<PageDescription>\n\nComplete the steps for setting up the ArgoCD tool\n\n</PageDescription>\n\n## Overview\n\nArgoCD is the [Developer Tools environment's continuous delivery tool](/guides/continuous-delivery).\nBefore you can use it as part of the environment, it must first be configured.\n\n## Prerequisites\n\nBefore setting up ArgoCD, [set up Artifactory](/getting-started/artifactory-setup) so that ArgoCD can use it.\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone https://github.com/ibm-garage-cloud/template-argocd-test\n  cd template-argocd-test\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n  ![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n  ![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your Developer Tools environment.\n\n- In your local copy of the `template-argocd-test` repo, open the `config/argocd-helm-repo.yaml` file in an editor\n\n- Edit the `data.helm.url` property to replace the value `<artifactory helm repository location>` \nwith the URL of the Helm repository location in Artifactory\n\n  ```yaml\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n    name: argocd-cm\n    namespace: tools\n  data:\n    helm.repositories: |\n      - url: <artifactory helm repository location>\n        name: helm-repository-location\n  ```\n\nUse the kubectl CLI to deploy the edited configuration file.\n\n- Test to confirm that your shell is logged into your cluster\n\n  ```bash \n  kubectl version --short\n  ```\n\n- Apply the configuration file to the cluster in the `tools` namespace\n\n  ```bash \n  kubectl apply -f argocd-helm-repo.yaml -n tools\n  ```\n\n  You can also apply the file using the `config/addconfigmap.sh` script in the `template-argocd-test` repo.\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the\nArtifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the Developer Tools environment that it needs to access the Helm chart repository in Artifactory.\n","type":"Mdx","contentDigest":"a270e5a08e201c37fe7c485939ddc899","counter":286,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"ArgoCD Setup"},"exports":{},"rawBody":"---\ntitle: ArgoCD Setup\n---\n\n<PageDescription>\n\nComplete the steps for setting up the ArgoCD tool\n\n</PageDescription>\n\n## Overview\n\nArgoCD is the [Developer Tools environment's continuous delivery tool](/guides/continuous-delivery).\nBefore you can use it as part of the environment, it must first be configured.\n\n## Prerequisites\n\nBefore setting up ArgoCD, [set up Artifactory](/getting-started/artifactory-setup) so that ArgoCD can use it.\n\n##  Configuration\n\nConfigure ArgoCD to use Artifactory.\n\n### Clone the ArgoCD repository\n\nThe ArgoCD repository contains files and samples for configuring ArgoCD.\n\n- Clone the repository to your development machine\n\n  ```bash\n  git clone https://github.com/ibm-garage-cloud/template-argocd-test\n  cd template-argocd-test\n  ```\n\n### Get the Helm repository location\n\nThe Helm repository is in Artifactory. ArgoCD will need the URL to that repository.\n\n- In the Artifactory console, select the Home page\n\n- In the Set Me Up section, click on the `generic-local` repository\n\n  ![Set Me Up - Repositories](setupartifactory.png \"Set Me Up: Repositories\")\n\n- In the Set Me Up dialog for the generic-local repository, copy the Deploy URL\n\n  ![Set Me Up - Generic Local Repository](artifactoryurlsetup.png \"Set Me Up: generic-local Repository\")\n\n### Update the ArgoCD configuration file\n\nThe repo you cloned contains an ArgoCD configuration file. Put the Helm repository location in that file\nand deploy it to your Developer Tools environment.\n\n- In your local copy of the `template-argocd-test` repo, open the `config/argocd-helm-repo.yaml` file in an editor\n\n- Edit the `data.helm.url` property to replace the value `<artifactory helm repository location>` \nwith the URL of the Helm repository location in Artifactory\n\n  ```yaml\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n    name: argocd-cm\n    namespace: tools\n  data:\n    helm.repositories: |\n      - url: <artifactory helm repository location>\n        name: helm-repository-location\n  ```\n\nUse the kubectl CLI to deploy the edited configuration file.\n\n- Test to confirm that your shell is logged into your cluster\n\n  ```bash \n  kubectl version --short\n  ```\n\n- Apply the configuration file to the cluster in the `tools` namespace\n\n  ```bash \n  kubectl apply -f argocd-helm-repo.yaml -n tools\n  ```\n\n  You can also apply the file using the `config/addconfigmap.sh` script in the `template-argocd-test` repo.\n\nVerify that the new configuration has deployed\n\n- In the Kubernetes dashboard or OpenShift console, navigate to the Config Maps in the `tools` namespace\n\n- Select the `argocd-cm` config map and confirm that its `helm.repositories` property specifies the\nArtifactory URL\n\n## Conclusion\n\nArgoCD now has the configuration file in the Developer Tools environment that it needs to access the Helm chart repository in Artifactory.\n","fileAbsolutePath":"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide/src/pages/getting-started/argocd-setup/index.mdx"}}}}