{"version":3,"sources":["webpack:///./src/pages/admin/iasc/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn"],"mappings":"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","file":"component---src-pages-admin-iasc-index-mdx-cc8b63d9cc1f299babbb.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/bwoolf/dev/git/ibm-garage-cloud/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n    </PageDescription>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p><inlineCode parentName=\"p\">{`Infrastruture as Code`}</inlineCode>{` is the practice of defining and managing the logic used to provision infrastructure as versioned\nartifacts in the same way that code artifacts have traditionally been handled. There are a number of different tools and\nframeworks available that enable this type of approach. The IBM Garage for Cloud Developer Tools currently leverage\nTerraform as the technology used to implement the Infrastructure as Code strategy.`}</p>\n    <p>{`The IasC terraform logic is stored in two repositories:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`garage-terraform-modules`}</inlineCode></p>\n        <p parentName=\"li\">{`  The modules that provide logic to provision individual components of the infrastructure. These modules cover one of\nthree different categories: infrastructure (e.g. create a kubernetes cluster), cloud service, or software deployed and\nconfigured into a cluster. `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-garage-cloud/garage-terraform-modules\"\n          }}>{`https://github.com/ibm-garage-cloud/garage-terraform-modules`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`ibm-garage-iteration-zero`}</inlineCode>{` `}</p>\n        <p parentName=\"li\">{`  The logic that makes use of the modules with specific configuration parameters used to deliver an entire solution.\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero\"\n          }}>{`https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero`}</a>{`\n`}</p>\n      </li>\n    </ul>\n    <p>{`This guide will walk through the various files that make up the Infrastructure as Code components and how to\ncustomize them. The `}<a parentName=\"p\" {...{\n        \"href\": \"/ibm-garage-developer-guide/admin/overview\"\n      }}>{`Installation Overview`}</a>{` walks through how to perform an install with the Iteration Zero\nscripts.`}</p>\n    <h2 {...{\n      \"id\": \"iteration-zero-terraform-scripts\"\n    }}>{`Iteration Zero terraform scripts`}</h2>\n    <p>{`The Iteration Zero terraform scripts make use of the modules to provision and prepare an environment. A listing of\nthe files within the repository is shown below.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.\n├── LICENSE\n├── README.md\n├── credentials.template\n├── launch.sh\n├── docs\n│   ├── APIKEYS.md\n│   ├── VLAN.md\n│   └── images\n│       ├── apikeys.png\n│       ├── catalyst-provisioned-environment.drawio\n│       ├── catalyst-provisioned-environment.png\n│       ├── classickeys.png\n│       └── devcluster.png\n└── terraform\n    ├── runTerraform.sh\n    ├── scripts\n    │   ├── apply.sh\n    │   ├── destroy-cluster.sh\n    │   ├── destroy-services.sh\n    ├── settings\n    │   ├── environment.tfvars\n    │   └── vlan.tfvars\n    ├── stages\n    │   ├── stage0.tf\n    │   ├── stage1-cluster.tf\n    │   ├── stage1-namespaces.tf\n    │   ├── stage1-postgres.tf\n    │   ├── stage2-argocd.tf\n    │   ├── stage2-artifactory.tf\n    │   ├── stage2-catalystdashboard.tf\n    │   ├── stage2-jenkins.tf\n    │   ├── stage2-pactbroker.tf\n    │   ├── stage2-sonarqube.tf\n    │   ├── stage3-appid.tf\n    │   ├── stage3-cloud_object_storage.tf\n    │   ├── stage3-cloudant.tf\n    │   ├── stage3-logdna.tf\n    │   ├── stage3-sysdig.tf\n    │   └── variables.tf\n    ├── stages-crc\n    │   ├── stage0.tf\n    │   ├── stage1-cluster.tf\n    │   ├── stage1-namespaces.tf\n    │   ├── stage1-postgres.tf\n    │   ├── stage2-argocd.tf\n    │   ├── stage2-artifactory.tf\n    │   ├── stage2-catalystdashboard.tf\n    │   ├── stage2-jenkins.tf\n    │   ├── stage2-pactbroker.tf\n    │   ├── stage2-sonarqube.tf\n    │   └── variables.tf\n    └── templates\n        └── stage0\n            └── backend-postgres.tf\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"stages\"\n    }}>{`Stages`}</h3>\n    <p>{`The files in the `}<inlineCode parentName=\"p\">{`stages`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`stages-crc`}</inlineCode>{` folders provide Terraform files that make use of external\nTerraform modules to provision resources. The different resources are logically grouped with stage numbers\nand names for the resource provided. All of the stages are processed by the Terraform apply at the same\ntime and Terraform works out the sequencing of execution based on the dependencies between the modules.`}</p>\n    <p>{`The Iteration Zero application comes with a pre-defined set of software and services that will be\nprovisioned. For more advanced situations, that set of modules can be easily customized.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Removing a stage`}</p>\n        <p parentName=\"li\">{`  To remove a stage, simply delete or move a file out of the stages directory`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Adding a stage`}</p>\n        <p parentName=\"li\">{`  To add a stage, define a new stage file and reference the desired module. Any necessary variables\ncan be referenced from the base variables or the output from the other modules.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Modifying a stage`}</p>\n        <p parentName=\"li\">{`  Any of the values for the variables in `}<inlineCode parentName=\"p\">{`variables.tf`}</inlineCode>{` or in the stage files can be updated to change\nthe results of what is built `}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"environment-configuration\"\n    }}>{`Environment configuration`}</h3>\n    <p>{`There a number of files used to provide the overall configuration for the environment that will be\nprovisioned.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`credentials.template`}</inlineCode></p>\n        <p parentName=\"li\">{`  Template file for the credentials.properties\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`credentials.properties`}</inlineCode></p>\n        <p parentName=\"li\">{`  File containing the API key and Classic Infrastructure credentials needed to run the scripts\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/settings/environment.tfvars`}</inlineCode></p>\n        <p parentName=\"li\">{`  General configuration values for the environment, like `}<inlineCode parentName=\"p\">{`region`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`resource group`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`cluster type`}</inlineCode>{`\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/settings/vlan.tfvars`}</inlineCode></p>\n        <p parentName=\"li\">{`  Configuration values for the IBM Cloud vlan settings needed for the creation of a new cluster\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/stages/variables.tf`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`terraform/stages-crc/variables.tf`}</inlineCode></p>\n        <p parentName=\"li\">{`  Defined variables for the various stages and, in some cases, default values.`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"scripts\"\n    }}>{`Scripts`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`launch.sh`}</inlineCode></p>\n        <p parentName=\"li\">{`  Launches a container image from the Docker Hub registry that contains all the tools necessary to run\nthe terraform scripts and opens into a shell where the Terraform logic can be run\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/runTerraform.sh`}</inlineCode></p>\n        <p parentName=\"li\">{`  Based on the values configured in `}<inlineCode parentName=\"p\">{`environment.tfvars`}</inlineCode>{`, this script creates the `}<inlineCode parentName=\"p\">{`terraform/workspace`}</inlineCode>{`\ndirectory, copies the appropriate Terraform files into that directory, then applies the Terraform\nscripts\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/scripts/apply.sh`}</inlineCode></p>\n        <p parentName=\"li\">{`  Applies the Terraform scripts. This script is copied into the `}<inlineCode parentName=\"p\">{`terraform/workspace`}</inlineCode>{` directory during the\n`}<inlineCode parentName=\"p\">{`runTerraform.sh`}</inlineCode>{` logic. It is then available to rerun the Terraform logic without having to set\nthe `}<inlineCode parentName=\"p\">{`terraform/workspace`}</inlineCode>{` directory up again.\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/scripts/destroy-cluster.sh`}</inlineCode></p>\n        <p parentName=\"li\">{`  Helper script that destroys the IBM Cloud cluster to clean up the environment`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`terraform/scripts/destroy-services.sh`}</inlineCode></p>\n        <p parentName=\"li\">{`  Helper script that destroys services that have been provisioned in IBM Cloud. It works against\nthe `}<inlineCode parentName=\"p\">{`resource group`}</inlineCode>{` that has been configured in the `}<inlineCode parentName=\"p\">{`environment.tfvars`}</inlineCode>{` file. Any values passed\nin as arguments will be used to do a regular expression match to `}<strong parentName=\"p\">{`exclude`}</strong>{` services from the\nlist of those that will be destroyed.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"garage-terraform-modules\"\n    }}>{`Garage Terraform Modules`}</h2>\n    <p>{`The terraform modules project contains the building block components that can be used to create a\nprovisioned environment. The modules are organized into one of three major categories:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`cloud-managed`}</inlineCode></p>\n        <p parentName=\"li\">{`  Modules that provision infrastructure (cluster and/or services) into a managed cloud environment\n`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`self-managed`}</inlineCode></p>\n        <p parentName=\"li\">{`  Modules that provision infrastructure into a self-managed environment (e.g. software deployed\ninto a cluster)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`generic`}</inlineCode></p>\n        <p parentName=\"li\">{`  Modules that can be applied independent of the environment (e.g. software that is installed\ninto a running kubernetes environment)`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`.\n├── README.md\n├── developer_contribution.md\n├── governance.md\n├── cloud-managed\n│   ├── cluster\n│   │   └── ibmcloud\n│   └── services\n│       ├── appid\n│       ├── cloud_object_storage\n│       ├── cloudant\n│       ├── logdna\n│       ├── postgres\n│       └── sysdig\n├── generic\n│   ├── cluster\n│   │   ├── namespaces\n│   │   └── serviceaccount\n│   └── tools\n│       ├── argocd_release\n│       ├── artifactory_release\n│       ├── catalystdashboard_release\n│       ├── jenkins_release\n│       ├── pactbroker_release\n│       └── sonarqube_release\n└── self-managed\n    ├── cluster\n    │   └── openshift_cluster\n    └── software\n        └── postgres\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}